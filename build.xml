<?xml version="1.0" encoding="UTF-8"?>
<project name="dreamsrt" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
    <include name="*.klib"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.11" value="${jdk.home.11}/bin"/>
  <path id="jdk.classpath.11">
    <fileset dir="${jdk.home.11}">
      <include name="../jbr!/java.base"/>
      <include name="../jbr!/java.compiler"/>
      <include name="../jbr!/java.datatransfer"/>
      <include name="../jbr!/java.desktop"/>
      <include name="../jbr!/java.instrument"/>
      <include name="../jbr!/java.logging"/>
      <include name="../jbr!/java.management"/>
      <include name="../jbr!/java.management.rmi"/>
      <include name="../jbr!/java.naming"/>
      <include name="../jbr!/java.net.http"/>
      <include name="../jbr!/java.prefs"/>
      <include name="../jbr!/java.rmi"/>
      <include name="../jbr!/java.scripting"/>
      <include name="../jbr!/java.se"/>
      <include name="../jbr!/java.security.jgss"/>
      <include name="../jbr!/java.security.sasl"/>
      <include name="../jbr!/java.smartcardio"/>
      <include name="../jbr!/java.sql"/>
      <include name="../jbr!/java.sql.rowset"/>
      <include name="../jbr!/java.transaction.xa"/>
      <include name="../jbr!/java.xml"/>
      <include name="../jbr!/java.xml.crypto"/>
      <include name="../jbr!/javafx.base"/>
      <include name="../jbr!/javafx.controls"/>
      <include name="../jbr!/javafx.fxml"/>
      <include name="../jbr!/javafx.graphics"/>
      <include name="../jbr!/javafx.media"/>
      <include name="../jbr!/javafx.swing"/>
      <include name="../jbr!/javafx.web"/>
      <include name="../jbr!/jdk.accessibility"/>
      <include name="../jbr!/jdk.aot"/>
      <include name="../jbr!/jdk.attach"/>
      <include name="../jbr!/jdk.charsets"/>
      <include name="../jbr!/jdk.compiler"/>
      <include name="../jbr!/jdk.crypto.cryptoki"/>
      <include name="../jbr!/jdk.crypto.ec"/>
      <include name="../jbr!/jdk.dynalink"/>
      <include name="../jbr!/jdk.hotspot.agent"/>
      <include name="../jbr!/jdk.httpserver"/>
      <include name="../jbr!/jdk.internal.ed"/>
      <include name="../jbr!/jdk.internal.jvmstat"/>
      <include name="../jbr!/jdk.internal.le"/>
      <include name="../jbr!/jdk.internal.vm.ci"/>
      <include name="../jbr!/jdk.internal.vm.compiler"/>
      <include name="../jbr!/jdk.internal.vm.compiler.management"/>
      <include name="../jbr!/jdk.jdi"/>
      <include name="../jbr!/jdk.jdwp.agent"/>
      <include name="../jbr!/jdk.jfr"/>
      <include name="../jbr!/jdk.jsobject"/>
      <include name="../jbr!/jdk.localedata"/>
      <include name="../jbr!/jdk.management"/>
      <include name="../jbr!/jdk.management.agent"/>
      <include name="../jbr!/jdk.management.jfr"/>
      <include name="../jbr!/jdk.naming.dns"/>
      <include name="../jbr!/jdk.naming.rmi"/>
      <include name="../jbr!/jdk.net"/>
      <include name="../jbr!/jdk.pack"/>
      <include name="../jbr!/jdk.scripting.nashorn"/>
      <include name="../jbr!/jdk.scripting.nashorn.shell"/>
      <include name="../jbr!/jdk.sctp"/>
      <include name="../jbr!/jdk.security.auth"/>
      <include name="../jbr!/jdk.security.jgss"/>
      <include name="../jbr!/jdk.unsupported"/>
      <include name="../jbr!/jdk.xml.dom"/>
      <include name="../jbr!/jdk.zipfs"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.11}"/>
  <property name="project.jdk.bin" value="${jdk.bin.11}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.11"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.com.google.code.gson:gson:2.8.6.classpath">
    <pathelement location="${basedir}/lib/gson-2.8.6.jar"/>
  </path>
  
  <path id="library.kotlinjavaruntime.classpath">
    <pathelement location="${path.variable.kotlin_bundled}/lib/kotlin-reflect.jar"/>
    <pathelement location="${path.variable.kotlin_bundled}/lib/kotlin-stdlib-jdk7.jar"/>
    <pathelement location="${path.variable.kotlin_bundled}/lib/kotlin-stdlib-jdk8.jar"/>
    <pathelement location="${path.variable.kotlin_bundled}/lib/kotlin-stdlib.jar"/>
    <pathelement location="${path.variable.kotlin_bundled}/lib/kotlin-test.jar"/>
  </path>
  
  <path id="library.org.junit.jupiter:junit-jupiter:5.6.0.classpath">
    <pathelement location="${basedir}/lib/apiguardian-api-1.1.0.jar"/>
    <pathelement location="${basedir}/lib/junit-jupiter-5.6.0.jar"/>
    <pathelement location="${basedir}/lib/junit-jupiter-api-5.6.0.jar"/>
    <pathelement location="${basedir}/lib/junit-jupiter-engine-5.6.0.jar"/>
    <pathelement location="${basedir}/lib/junit-jupiter-params-5.6.0.jar"/>
    <pathelement location="${basedir}/lib/junit-platform-commons-1.6.0.jar"/>
    <pathelement location="${basedir}/lib/junit-platform-engine-1.6.0.jar"/>
    <pathelement location="${basedir}/lib/opentest4j-1.2.0.jar"/>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <fileset dir="${javac2.home}">
      <include name="javac2.jar"/>
      <include name="jdom.jar"/>
      <include name="asm-all*.jar"/>
      <include name="forms-*.jar"/>
    </fileset>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module dreamsAPI -->
  
  <dirname property="module.dreamsapi.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.dreamsapi" value="${jdk.home.11}"/>
  <property name="module.jdk.bin.dreamsapi" value="${jdk.bin.11}"/>
  <property name="module.jdk.classpath.dreamsapi" value="jdk.classpath.11"/>
  
  <property name="compiler.args.dreamsapi" value="-encoding UTF-8 -source 11 -target 11 ${compiler.args}"/>
  
  <property name="dreamsapi.output.dir" value="${module.dreamsapi.basedir}/out/production/dreamsAPI"/>
  <property name="dreamsapi.testoutput.dir" value="${module.dreamsapi.basedir}/out/test/dreamsAPI"/>
  
  <path id="dreamsapi.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="dreamsapi.module.production.classpath">
    <path refid="${module.jdk.classpath.dreamsapi}"/>
    <path refid="library.kotlinjavaruntime.classpath"/>
    <path refid="library.com.google.code.gson:gson:2.8.6.classpath"/>
  </path>
  
  <path id="dreamsapi.runtime.production.module.classpath">
    <pathelement location="${dreamsapi.output.dir}"/>
    <path refid="library.kotlinjavaruntime.classpath"/>
    <path refid="library.com.google.code.gson:gson:2.8.6.classpath"/>
  </path>
  
  <path id="dreamsapi.module.classpath">
    <path refid="${module.jdk.classpath.dreamsapi}"/>
    <pathelement location="${dreamsapi.output.dir}"/>
    <path refid="library.kotlinjavaruntime.classpath"/>
    <path refid="library.com.google.code.gson:gson:2.8.6.classpath"/>
  </path>
  
  <path id="dreamsapi.runtime.module.classpath">
    <pathelement location="${dreamsapi.testoutput.dir}"/>
    <pathelement location="${dreamsapi.output.dir}"/>
    <path refid="library.kotlinjavaruntime.classpath"/>
    <path refid="library.com.google.code.gson:gson:2.8.6.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.dreamsapi">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.dreamsapi">
    <patternset refid="excluded.from.module.dreamsapi"/>
  </patternset>
  
  <path id="dreamsapi.module.sourcepath">
    <dirset dir="${module.dreamsapi.basedir}/dreamsAPI">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.dreamsapi" depends="compile.module.dreamsapi.production,compile.module.dreamsapi.tests" description="Compile module dreamsAPI"/>
  
  <target name="compile.module.dreamsapi.production" depends="register.custom.compilers" description="Compile module dreamsAPI; production classes">
    <mkdir dir="${dreamsapi.output.dir}"/>
    <javac2 destdir="${dreamsapi.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.dreamsapi}/javac">
      <compilerarg line="${compiler.args.dreamsapi}"/>
      <bootclasspath refid="dreamsapi.module.bootclasspath"/>
      <classpath refid="dreamsapi.module.production.classpath"/>
      <src refid="dreamsapi.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.dreamsapi"/>
    </javac2>
    
    <copy todir="${dreamsapi.output.dir}">
      <fileset dir="${module.dreamsapi.basedir}/dreamsAPI/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.dreamsapi.tests" depends="register.custom.compilers,compile.module.dreamsapi.production" description="compile module dreamsAPI; test classes" unless="skip.tests"/>
  
  <target name="clean.module.dreamsapi" description="cleanup module">
    <delete dir="${dreamsapi.output.dir}"/>
    <delete dir="${dreamsapi.testoutput.dir}"/>
  </target>
  
  
  <!-- Module dreamsrt -->
  
  <dirname property="module.dreamsrt.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.dreamsrt" value="${jdk.home.11}"/>
  <property name="module.jdk.bin.dreamsrt" value="${jdk.bin.11}"/>
  <property name="module.jdk.classpath.dreamsrt" value="jdk.classpath.11"/>
  
  <property name="compiler.args.dreamsrt" value="-encoding UTF-8 -source 11 -target 11 ${compiler.args}"/>
  
  <property name="dreamsrt.output.dir" value="${module.dreamsrt.basedir}/out/production/dreamsrt"/>
  <property name="dreamsrt.testoutput.dir" value="${module.dreamsrt.basedir}/out/test/dreamsrt"/>
  
  <path id="dreamsrt.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="dreamsrt.module.production.classpath">
    <path refid="${module.jdk.classpath.dreamsrt}"/>
    <path refid="library.kotlinjavaruntime.classpath"/>
    <pathelement location="${dreamsapi.output.dir}"/>
    <path refid="library.org.junit.jupiter:junit-jupiter:5.6.0.classpath"/>
  </path>
  
  <path id="dreamsrt.runtime.production.module.classpath">
    <pathelement location="${dreamsrt.output.dir}"/>
    <path refid="library.kotlinjavaruntime.classpath"/>
    <pathelement location="${dreamsapi.output.dir}"/>
    <path refid="library.com.google.code.gson:gson:2.8.6.classpath"/>
    <path refid="library.org.junit.jupiter:junit-jupiter:5.6.0.classpath"/>
  </path>
  
  <path id="dreamsrt.module.classpath">
    <path refid="${module.jdk.classpath.dreamsrt}"/>
    <pathelement location="${dreamsrt.output.dir}"/>
    <path refid="library.kotlinjavaruntime.classpath"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.4.2/junit-jupiter-api-5.4.2.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-engine/5.4.2/junit-jupiter-engine-5.4.2.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-params/5.4.2/junit-jupiter-params-5.4.2.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter/5.4.2/junit-jupiter-5.4.2.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.4.2/junit-platform-commons-1.4.2.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-engine/1.4.2/junit-platform-engine-1.4.2.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar"/>
    <pathelement location="${dreamsapi.testoutput.dir}"/>
    <pathelement location="${dreamsapi.output.dir}"/>
    <path refid="library.org.junit.jupiter:junit-jupiter:5.6.0.classpath"/>
  </path>
  
  <path id="dreamsrt.runtime.module.classpath">
    <pathelement location="${dreamsrt.testoutput.dir}"/>
    <pathelement location="${dreamsrt.output.dir}"/>
    <path refid="library.kotlinjavaruntime.classpath"/>
    <pathelement location="${path.variable.maven_repository}/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-api/5.4.2/junit-jupiter-api-5.4.2.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-engine/5.4.2/junit-jupiter-engine-5.4.2.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter-params/5.4.2/junit-jupiter-params-5.4.2.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/jupiter/junit-jupiter/5.4.2/junit-jupiter-5.4.2.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-commons/1.4.2/junit-platform-commons-1.4.2.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/junit/platform/junit-platform-engine/1.4.2/junit-platform-engine-1.4.2.jar"/>
    <pathelement location="${path.variable.maven_repository}/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar"/>
    <pathelement location="${dreamsapi.testoutput.dir}"/>
    <pathelement location="${dreamsapi.output.dir}"/>
    <path refid="library.com.google.code.gson:gson:2.8.6.classpath"/>
    <path refid="library.org.junit.jupiter:junit-jupiter:5.6.0.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.dreamsrt">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.dreamsrt">
    <patternset refid="excluded.from.module.dreamsrt"/>
  </patternset>
  
  <path id="dreamsrt.module.sourcepath">
    <dirset dir="${module.dreamsrt.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="dreamsrt.module.test.sourcepath">
    <dirset dir="${module.dreamsrt.basedir}">
      <include name="tests"/>
      <include name="tests_resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.dreamsrt" depends="compile.module.dreamsrt.production,compile.module.dreamsrt.tests" description="Compile module dreamsrt"/>
  
  <target name="compile.module.dreamsrt.production" depends="register.custom.compilers,compile.module.dreamsapi" description="Compile module dreamsrt; production classes">
    <mkdir dir="${dreamsrt.output.dir}"/>
    <javac2 destdir="${dreamsrt.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.dreamsrt}/javac">
      <compilerarg line="${compiler.args.dreamsrt}"/>
      <bootclasspath refid="dreamsrt.module.bootclasspath"/>
      <classpath refid="dreamsrt.module.production.classpath"/>
      <src refid="dreamsrt.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.dreamsrt"/>
    </javac2>
    
    <copy todir="${dreamsrt.output.dir}">
      <fileset dir="${module.dreamsrt.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.dreamsrt.tests" depends="register.custom.compilers,compile.module.dreamsrt.production" description="compile module dreamsrt; test classes" unless="skip.tests">
    <mkdir dir="${dreamsrt.testoutput.dir}"/>
    <javac2 destdir="${dreamsrt.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.dreamsrt}/javac">
      <compilerarg line="${compiler.args.dreamsrt}"/>
      <bootclasspath refid="dreamsrt.module.bootclasspath"/>
      <classpath refid="dreamsrt.module.classpath"/>
      <src refid="dreamsrt.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.dreamsrt"/>
    </javac2>
    
    <copy todir="${dreamsrt.testoutput.dir}">
      <fileset dir="${module.dreamsrt.basedir}/tests">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.dreamsrt.basedir}/tests_resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.dreamsrt" description="cleanup module">
    <delete dir="${dreamsrt.output.dir}"/>
    <delete dir="${dreamsrt.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.dreamsapi, clean.module.dreamsrt" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.dreamsapi, compile.module.dreamsrt" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.dreamsapi:jar" value="${basedir}/out/artifacts/dreamsAPI_jar"/>
    <property name="artifact.output.dreamsrt:jar" value="${basedir}/out/artifacts/dreamsrt_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.dreamsAPI.jar" value="${artifacts.temp.dir}/dreamsAPI.jar"/>
    <property name="temp.jar.path.dreamsrt.jar" value="${artifacts.temp.dir}/dreamsrt.jar"/>
  </target>
  
  <target name="artifact.dreamsapi:jar" depends="init.artifacts, compile.module.dreamsapi" description="Build &#39;dreamsAPI:jar&#39; artifact">
    <property name="artifact.temp.output.dreamsapi:jar" value="${artifacts.temp.dir}/dreamsAPI_jar"/>
    <mkdir dir="${artifact.temp.output.dreamsapi:jar}"/>
    <jar destfile="${temp.jar.path.dreamsAPI.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${dreamsapi.output.dir}"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-stdlib.jar"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-reflect.jar"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-test.jar"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-stdlib-jdk7.jar"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-stdlib-jdk8.jar"/>
    </jar>
    <copy file="${temp.jar.path.dreamsAPI.jar}" tofile="${artifact.temp.output.dreamsapi:jar}/dreamsAPI.jar"/>
  </target>
  
  <target name="artifact.dreamsrt:jar" depends="init.artifacts, compile.module.dreamsrt" description="Build &#39;dreamsrt:jar&#39; artifact">
    <property name="artifact.temp.output.dreamsrt:jar" value="${artifacts.temp.dir}/dreamsrt_jar"/>
    <mkdir dir="${artifact.temp.output.dreamsrt:jar}"/>
    <jar destfile="${temp.jar.path.dreamsrt.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${dreamsrt.output.dir}"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-stdlib.jar"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-reflect.jar"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-test.jar"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-stdlib-jdk7.jar"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-stdlib-jdk8.jar"/>
    </jar>
    <copy file="${temp.jar.path.dreamsrt.jar}" tofile="${artifact.temp.output.dreamsrt:jar}/dreamsrt.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.dreamsapi:jar, artifact.dreamsrt:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.dreamsapi:jar}"/>
    <copy todir="${artifact.output.dreamsapi:jar}">
      <fileset dir="${artifact.temp.output.dreamsapi:jar}"/>
    </copy>
    <mkdir dir="${artifact.output.dreamsrt:jar}"/>
    <copy todir="${artifact.output.dreamsrt:jar}">
      <fileset dir="${artifact.temp.output.dreamsrt:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>